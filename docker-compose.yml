services:
  redis:
    build:
      dockerfile: Dockerfile
      context: ./redis
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - ./redis/.env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "-p", "6379", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wa-bot_network
  
  wa-bot:
    container_name: wa-bot
    build:
      dockerfile: wa-bot/Dockerfile
    env_file:
      - ./wa-bot/.env
    restart: unless-stopped
    volumes:
      - ./wa-bot/auth_info:/usr/server/wa-bot/auth_info
    depends_on:
      - redis
      - mongodb
      - rabbitmq
    networks:
      - wa-bot_network

  rabbitmq:
    build:
      dockerfile: rabbitmq/Dockerfile
    env_file:
      - ./rabbitmq/.env
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    ports:
      - "5672:5672"    # AMQP protocol
      - "15672:15672"  # Management UI
    environment:
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - wa-bot_network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: admin
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_bot:/data/db
      - ./mongodb-init.js:/docker-entrypoint-initdb.d/mongodb-init.js:ro
    networks:
      - wa-bot_network
    healthcheck:
      test: ["CMD", "mongosh", "admin", "--quiet", "--eval", "db.adminCommand('ping').ok", "--username", "${MONGO_USER}", "--password", "${MONGO_PASSWORD}", "--authenticationDatabase", "admin"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
  
  notification-api:
    build:
      dockerfile: Dockerfile
      context: ./notification-api
    container_name: notification-api
    env_file:
      - ./notification-api/.env
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - rabbitmq
      - mongodb
    networks:
      - wa-bot_network

volumes:
  redis_data:
    name: whatsapp_bot_redis_data
  rabbitmq_data:
  rabbitmq_logs:
  mongodb_data_bot:
    name: mongodb_data_bot
  mongodb_logs:

networks:
  wa-bot_network:
    driver: bridge
